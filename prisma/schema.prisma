// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider = "prisma-client-js"
}

model Access {
  id           Int      @id @default(autoincrement())
  menu         Int
  type_user_id Int
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  type_user TypeUser @relation(fields: [type_user_id], references: [id])

  @@index([type_user_id])
  @@map("access")
}

model TypeUser {
  id        Int      @id @default(autoincrement())
  type_name String   @db.VarChar(45)
  users     User[]
  access    Access[]

  @@map("typeuser")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @unique
  telefono     String   @db.VarChar(45)
  password     String   @db.VarChar(255)
  type_user_id Int
  sede_id      Int?
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])
  sede         Sede?    @relation(fields: [sede_id], references: [id])

  @@index([type_user_id])
  @@map("user")
}

model Sede {
  id                                Int                                 @id @default(autoincrement())
  name                              String                              @db.VarChar(45)
  combustibles                      Combustible[]
  fertilizante                      Fertilizante[]
  ConsumoPapel                      ConsumoPapel[]
  combustibleCalculos               combustibleCalculos[]
  taxi                              Taxi[]
  fertilizanteCalculos              fertilizanteCalculos[]
  area                              area[]
  User                              User[]
  combustibleCalculosDetail         combustibleCalculosDetail[]
  ConsumoPapelCalculosDetail        ConsumoPapelCalculosDetail[]
  ConsumoPapelCalculos              ConsumoPapelCalculos[]
  fertilizanteCalculosDetail        fertilizanteCalculosDetail[]
  Consumible                        Consumible[]
  ConsumibleCalculos                ConsumibleCalculos[]
  ConsumibleCalculosDetail          ConsumibleCalculosDetail[]
  TaxiCalculos                      TaxiCalculos[]
  TaxiCalculosDetail                TaxiCalculosDetail[]
  TransporteAereoCalculos           TransporteAereoCalculos[]
  TransporteAereoCalculosDetail     TransporteAereoCalculosDetail[]
  TransporteAereo                   TransporteAereo[]
  TransporteTerrestre               TransporteTerrestre[]
  TransporteTerrestreCalculos       TransporteTerrestreCalculos[]
  TransporteTerrestreCalculosDetail TransporteTerrestreCalculosDetail[]
  CasaTrabajo                       CasaTrabajo[]
  CasaTrabajoCalculos               CasaTrabajoCalculos[]
  CasaTrabajoCalculosDetail         CasaTrabajoCalculosDetail[]
  Activo                            Activo[]
  ActivoCalculos                    ActivoCalculos[]
  ActivoCalculosDetail              ActivoCalculosDetail[]
  Extintor                          Extintor[]
  ExtintorCalculos                  ExtintorCalculos[]
  ExtintorCalculosDetail            ExtintorCalculosDetail[]

  @@map("sede")
}

model tipoCombustibleFactor {
  id                        Int                         @id @default(autoincrement())
  tipo                      String
  factorEmisionCO2          Float
  factorEmisionCH4          Float
  factorEmisionN2O          Float
  anio_id                   Int
  tipoCombustible_id        Int
  fuente                    String?
  link                      String?
  created_at                DateTime
  updated_at                DateTime
  anio                      Anio                        @relation(fields: [anio_id], references: [id])
  tipoCombustible           tipoCombustible             @relation(fields: [tipoCombustible_id], references: [id])
  combustibleCalculosDetail combustibleCalculosDetail[]

  @@map("tipocombustiblefactor")
}

model tipoCombustible {
  id          Int    @id @default(autoincrement())
  nombre      String @db.VarChar(45)
  abreviatura String @db.VarChar(45)
  unidad      String @db.VarChar(45)

  created_at            DateTime
  updated_at            DateTime
  tipoCombustibleFactor tipoCombustibleFactor[]
  Combustible           Combustible[]
  combustibleCalculos   combustibleCalculos[]

  @@map("tipocombustible")
}

model Mes {
  id                  Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(45)
  created_at          DateTime
  updated_at          DateTime
  combustibles        Combustible[]
  Taxi                Taxi[]
  consumoEnergia      consumoEnergia[]
  ConsumoAgua         ConsumoAgua[]
  Consumible          Consumible[]
  TransporteAereo     TransporteAereo[]
  TransporteTerrestre TransporteTerrestre[]
  Activo              Activo[]
  CasaTrabajo         CasaTrabajo[]
  Extintor            Extintor[]
  ConsumoPapel        ConsumoPapel[]

  @@map("mes")
}

model Anio {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime
  updated_at DateTime

  combustibles                     Combustible[]
  fertilizante                     Fertilizante[]
  consumoPapel                     ConsumoPapel[]
  Taxi                             Taxi[]
  consumoEnergia                   consumoEnergia[]
  factorConversionSEIN             factorConversionSEIN[]
  ConsumoAgua                      ConsumoAgua[]
  tipoCombustibleFactor            tipoCombustibleFactor[]
  FactorEmisionAgua                FactorEmisionAgua[]
  FactorTipoPapel                  FactorTipoPapel[]
  ConsumoPapelCalculosDetail       ConsumoPapelCalculosDetail[]
  FactorEmisionFertilizante        FactorEmisionFertilizante[]
  FactorTipoConsumible             FactorTipoConsumible[]
  Consumible                       Consumible[]
  ConsumibleCalculosDetail         ConsumibleCalculosDetail[]
  FactorEmisionTaxi                FactorEmisionTaxi[]
  TransporteAereo                  TransporteAereo[]
  FactorEmisionTransporteAereo     FactorEmisionTransporteAereo[]
  FactorEmisionTransporteTerrestre FactorEmisionTransporteTerrestre[]
  TransporteTerrestre              TransporteTerrestre[]
  CasaTrabajo                      CasaTrabajo[]
  FactorTransporteCasaTrabajo      FactorTransporteCasaTrabajo[]
  CasaTrabajoCalculosDetail        CasaTrabajoCalculosDetail[]
  Activo                           Activo[]
  FactorTipoActivo                 FactorTipoActivo[]
  ActivoCalculosDetail             ActivoCalculosDetail[]
  FactorEmisionExtintor            FactorEmisionExtintor[]
  Extintor                         Extintor[]

  @@map("anio")
}

model Combustible {
  id                 Int    @id @default(autoincrement())
  tipo               String @db.VarChar(45)
  tipoEquipo         String @db.VarChar(45)
  consumo            Float
  tipoCombustible_id Int
  mes_id             Int
  anio_id            Int
  sede_id            Int
  anio_mes           Int

  created_at DateTime
  updated_at DateTime

  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustible_id], references: [id])
  mes             Mes?             @relation(fields: [mes_id], references: [id])
  anio            Anio?            @relation(fields: [anio_id], references: [id])
  sede            Sede?            @relation(fields: [sede_id], references: [id])
  File            File[]

  @@map("combustible")
}

model Documento {
  id        Int    @id @default(autoincrement())
  nombre    String @db.VarChar(255)
  contenido Bytes

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  fertilizante Fertilizante?

  @@map("documento")
}

model TipoFertilizante {
  id                  Int      @id @default(autoincrement())
  clase               String   @db.VarChar(45) // Organico o Sintetico
  nombre              String   @db.VarChar(45)
  porcentajeNitrogeno Float
  unidad              String   @db.VarChar(45)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  fertilizantes              Fertilizante[]
  fertilizanteCalculos       fertilizanteCalculos[]
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]
  FactorEmisionFertilizante  FactorEmisionFertilizante[]

  @@map("tipofertilizante")
}

model FactorEmisionFertilizante {
  id                 Int     @id @default(autoincrement())
  valor              Float
  anio_id            Int
  fuente             String?
  link               String?
  tipoFertilizanteId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoFertilizante           TipoFertilizante             @relation(fields: [tipoFertilizanteId], references: [id])
  anio                       Anio                         @relation(fields: [anio_id], references: [id])
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]

  @@map("factoremisionfertilizante")
}

model Fertilizante {
  id                  Int     @id @default(autoincrement())
  tipoFertilizante_id Int
  cantidad            Float
  is_ficha            Boolean @default(false)
  ficha_id            Int?    @unique
  sede_id             Int?
  anio_id             Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoFertilizante TipoFertilizante? @relation(fields: [tipoFertilizante_id], references: [id])
  ficha            Documento?        @relation(fields: [ficha_id], references: [id])
  sede             Sede?             @relation(fields: [sede_id], references: [id])
  anio             Anio?             @relation(fields: [anio_id], references: [id])
  File             File[]

  @@map("fertilizante")
}

model TipoPapel {
  id      Int    @id @default(autoincrement())
  nombre  String @db.VarChar(50)
  gramaje Float // g/m2
  area    Float // m2
  hojas   Float // cantidad de hojas

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  consumoPapel         ConsumoPapel[]
  FactorTipoPapel      FactorTipoPapel[]
  ConsumoPapelCalculos ConsumoPapelCalculos[]

  @@map("tipopapel")
}

model FactorTipoPapel {
  id          Int     @id @default(autoincrement())
  factor      Float
  tipoPapelId Int
  anioId      Int
  fuente      String?
  link        String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel                  TipoPapel?                   @relation(fields: [tipoPapelId], references: [id])
  anio                       Anio?                        @relation(fields: [anioId], references: [id])
  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]

  @@map("factortipopapel")
}

model ConsumoPapel {
  id               Int     @id @default(autoincrement())
  tipoPapel_id     Int
  cantidad_paquete Int
  peso             Float
  comentario       String?
  anio_id          Int
  mes_id           Int
  sede_id          Int
  anio_mes         Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel TipoPapel @relation(fields: [tipoPapel_id], references: [id])
  anio      Anio      @relation(fields: [anio_id], references: [id])
  mes       Mes       @relation(fields: [mes_id], references: [id])
  sede      Sede?     @relation(fields: [sede_id], references: [id])
  File      File[]

  @@map("consumopapel")
}

model ConsumoPapelCalculos {
  id           Int   @id @default(autoincrement())
  tipoPapel_id Int
  consumo      Float
  period_id    Int
  sede_id      Int
  totalGEI     Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel TipoPapel      @relation(fields: [tipoPapel_id], references: [id])
  sede      Sede?          @relation(fields: [sede_id], references: [id])
  Periodo   PeriodoCalculo @relation(fields: [period_id], references: [id])

  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]

  @@map("consumopapelcalculos")
}

model ConsumoPapelCalculosDetail {
  id                     Int   @id @default(autoincrement())
  factorTipoPapelId      Int
  consumo                Float
  totalGEI               Float
  consumoPapelCalculosId Int
  sedeId                 Int
  anioId                 Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  factorTipoPapel      FactorTipoPapel      @relation(fields: [factorTipoPapelId], references: [id])
  consumoPapelCalculos ConsumoPapelCalculos @relation(fields: [consumoPapelCalculosId], references: [id])
  sede                 Sede?                @relation(fields: [sedeId], references: [id])
  anio                 Anio?                @relation(fields: [anioId], references: [id])

  @@map("consumopapelcalculosdetail")
}

// CALCULOS
// POTENCIAL DE CALIENTAMIENTO GLOBAL
model GWP {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  formula    String   @db.VarChar(45)
  valor      Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("gwp")
}

// A1_1 COMBUSTIBLES
model combustibleCalculos {
  id                Int    @id @default(autoincrement())
  tipo              String @db.VarChar(45)
  consumoTotal      Float
  consumo           Float
  emisionCO2        Float
  emisionCH4        Float
  emisionN2O        Float
  totalGEI          Float
  sedeId            Int
  periodoCalculoId  Int?
  tipoCombustibleId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede            Sede?            @relation(fields: [sedeId], references: [id])
  PeriodoCalculo  PeriodoCalculo?  @relation(fields: [periodoCalculoId], references: [id])
  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustibleId], references: [id])

  combustibleCalculosDetail combustibleCalculosDetail[]

  @@map("combustiblecalculos")
}

model combustibleCalculosDetail {
  id                      Int    @id @default(autoincrement())
  tipo                    String @db.VarChar(45)
  tipoCombustibleFactorId Int
  consumoTotal            Float
  consumo                 Float
  emisionCO2              Float
  emisionCH4              Float
  emisionN2O              Float
  totalGEI                Float
  sedeId                  Int
  combustibleCalculosId   Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoCombustibleFactor tipoCombustibleFactor? @relation(fields: [tipoCombustibleFactorId], references: [id])
  sede                  Sede?                  @relation(fields: [sedeId], references: [id])
  combustibleCalculos   combustibleCalculos?   @relation(fields: [combustibleCalculosId], references: [id])

  @@map("combustiblecalculosdetail")
}

model fertilizanteCalculos {
  id                     Int    @id @default(autoincrement())
  tipofertilizanteId     Int
  consumoTotal           Float
  cantidadAporte         Float
  emisionDirecta         Float
  totalEmisionesDirectas Float
  emisionGEI             Float?
  sedeId                 Int
  periodoCalculoId       Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede                       Sede?                        @relation(fields: [sedeId], references: [id])
  periodoCalculo             PeriodoCalculo?              @relation(fields: [periodoCalculoId], references: [id])
  TipoFertilizante           TipoFertilizante?            @relation(fields: [tipofertilizanteId], references: [id])
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]

  @@map("fertilizantecalculos")
}

model fertilizanteCalculosDetail {
  id                     Int   @id @default(autoincrement())
  tipofertilizanteId     Int
  factorEmisionId        Int
  consumo                Float
  cantidadAporte         Float
  emisionDirecta         Float
  totalEmisionesDirectas Float
  emisionGEI             Float
  sedeId                 Int
  fertilizanteCalculosId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  TipoFertilizante     TipoFertilizante          @relation(fields: [tipofertilizanteId], references: [id])
  factorEmision        FactorEmisionFertilizante @relation(fields: [factorEmisionId], references: [id])
  sede                 Sede?                     @relation(fields: [sedeId], references: [id])
  fertilizanteCalculos fertilizanteCalculos      @relation(fields: [fertilizanteCalculosId], references: [id])

  @@map("fertilizantecalculosdetail")
}

model consumoEnergia {
  id               Int    @id @default(autoincrement())
  areaId           Int
  numeroSuministro String @db.VarChar(45)
  consumo          Float
  mes_id           Int
  anio_id          Int
  anio_mes         Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?   @relation(fields: [mes_id], references: [id])
  anio Anio?  @relation(fields: [anio_id], references: [id])
  area area?  @relation(fields: [areaId], references: [id])
  File File[]

  @@map("consumoenergia")
}

model area {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  sede_id    Int?

  sede Sede? @relation(fields: [sede_id], references: [id])

  ConsumoAgua               ConsumoAgua[]
  ConsumoAguaCalculos       ConsumoAguaCalculos[]
  consumoEnergia            consumoEnergia[]
  EnergiaCalculos           EnergiaCalculos[]
  EnergiaCalculosDetail     EnergiaCalculosDetail[]
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]

  @@map("area")
}

model EnergiaCalculos {
  id               Int   @id @default(autoincrement())
  consumoArea      Float
  factorConversion Float
  consumoTotal     Float
  emisionCO2       Float
  emisionCH4       Float
  emisionN2O       Float
  totalGEI         Float
  areaId           Int
  periodoCalculoId Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                  area?                   @relation(fields: [areaId], references: [id])
  PeriodoCalculo        PeriodoCalculo?         @relation(fields: [periodoCalculoId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]

  @@map("energiacalculos")
}

model EnergiaCalculosDetail {
  id                     Int   @id @default(autoincrement())
  consumoArea            Float
  factorConversion       Float
  factorConversionSEINId Int
  consumoTotal           Float
  emisionCO2             Float
  emisionCH4             Float
  emisionN2O             Float
  totalGEI               Float
  areaId                 Int
  energiaCalculosId      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                 area?                @relation(fields: [areaId], references: [id])
  EnergiaCalculos      EnergiaCalculos      @relation(fields: [energiaCalculosId], references: [id])
  factorConversionSEIN factorConversionSEIN @relation(fields: [factorConversionSEINId], references: [id])

  @@map("energiacalculosdetail")
}

model factorConversionSEIN {
  id         Int      @id @default(autoincrement())
  factorCO2  Float
  factorCH4  Float
  factorN2O  Float
  fuente     String?
  link       String?
  anioId     Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio                  Anio                    @relation(fields: [anioId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]

  @@map("factorconversionsein")
}

model FactorEmisionTaxi {
  id      Int     @id @default(autoincrement())
  factor  Float
  anio_id Int
  fuente  String?
  link    String?

  anio               Anio                 @relation(fields: [anio_id], references: [id])
  TaxiCalculosDetail TaxiCalculosDetail[]

  @@map("factoremisiontaxi")
}

model Taxi {
  id                Int    @id @default(autoincrement())
  unidadContratante String
  lugarSalida       String
  lugarDestino      String
  montoGastado      Float
  kmRecorrido       Float
  sede_id           Int
  mes_id            Int
  anio_id           Int
  anio_mes          Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?   @relation(fields: [mes_id], references: [id])
  anio Anio?  @relation(fields: [anio_id], references: [id])
  sede Sede?  @relation(fields: [sede_id], references: [id])
  File File[]

  @@map("taxi")
}

model TaxiCalculos {
  id               Int   @id @default(autoincrement())
  consumo          Float
  totalGEI         Float
  sedeId           Int
  periodoCalculoId Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede               Sede?                @relation(fields: [sedeId], references: [id])
  PeriodoCalculo     PeriodoCalculo?      @relation(fields: [periodoCalculoId], references: [id])
  TaxiCalculosDetail TaxiCalculosDetail[]

  @@map("taxicalculos")
}

model TaxiCalculosDetail {
  id                  Int      @id @default(autoincrement())
  consumo             Float
  factorEmisionTaxiId Int
  totalGEI            Float
  sedeId              Int
  taxiCalculosId      Int
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  sede          Sede?              @relation(fields: [sedeId], references: [id])
  factorEmision FactorEmisionTaxi? @relation(fields: [factorEmisionTaxiId], references: [id])
  taxiCalculos  TaxiCalculos       @relation(fields: [taxiCalculosId], references: [id])

  @@map("taxicalculosdetail")
}

// AGUA A3_5
model ConsumoAgua {
  id            Int     @id @default(autoincrement())
  consumo       Float
  codigoMedidor String? @db.VarChar(45)
  fuenteAgua    String  @db.VarChar(45) // Red Publica o Pozo
  area_id       Int?
  mes_id        Int
  anio_id       Int
  anio_mes      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio Anio   @relation(fields: [anio_id], references: [id])
  mes  Mes    @relation(fields: [mes_id], references: [id])
  area area?  @relation(fields: [area_id], references: [id])
  File File[]

  @@map("consumoagua")
}

model FactorEmisionAgua {
  id      Int     @id @default(autoincrement())
  factor  Float
  anio_id Int
  fuente  String?
  link    String?

  anio                      Anio                        @relation(fields: [anio_id], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]

  @@map("factoremisionagua")
}

model ConsumoAguaCalculos {
  id               Int   @id @default(autoincrement())
  consumoArea      Float
  totalGEI         Float
  areaId           Int
  periodoCalculoId Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                      area?                       @relation(fields: [areaId], references: [id])
  PeriodoCalculo            PeriodoCalculo?             @relation(fields: [periodoCalculoId], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]

  @@map("consumoaguacalculos")
}

model ConsumoAguaCalculosDetail {
  id                    Int   @id @default(autoincrement())
  consumoArea           Float
  factorEmisionAguaId   Int
  totalGEI              Float
  areaId                Int
  consumoAguaCalculosId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                area?               @relation(fields: [areaId], references: [id])
  consumoAguaCaluclos ConsumoAguaCalculos @relation(fields: [consumoAguaCalculosId], references: [id])
  factorEmisionAgua   FactorEmisionAgua?  @relation(fields: [factorEmisionAguaId], references: [id])

  @@map("consumoaguacalculosdetail")
}

model PeriodoCalculo {
  id                          Int                           @id @default(autoincrement())
  fechaInicio                 String?
  fechaFin                    String?
  fechaInicioValue            Int?
  fechaFinValue               Int?
  yearInicio                  String?
  yearFin                     String?
  created_at                  DateTime                      @default(now())
  updated_at                  DateTime                      @updatedAt
  ConsumoAguaCalculos         ConsumoAguaCalculos[]
  EnergiaCalculos             EnergiaCalculos[]
  fertilizanteCalculos        fertilizanteCalculos[]
  combustibleCalculos         combustibleCalculos[]
  ConsumoPapelCalculos        ConsumoPapelCalculos[]
  ConsumibleCalculos          ConsumibleCalculos[]
  TaxiCalculos                TaxiCalculos[]
  TransporteAereoCalculos     TransporteAereoCalculos[]
  TransporteTerrestreCalculos TransporteTerrestreCalculos[]
  CasaTrabajoCalculos         CasaTrabajoCalculos[]
  ActivoCalculos              ActivoCalculos[]
  ExtintorCalculos            ExtintorCalculos[]

  @@map("periodocalculo")
}

// CONSUMIBLES GENERALES
model CategoriaConsumible {
  id             Int              @id @default(autoincrement())
  nombre         String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("categoriaconsumible")
}

model GrupoConsumible {
  id             Int              @id @default(autoincrement())
  nombre         String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("grupoconsumible")
}

model ProcesoConsumible {
  id             Int              @id @default(autoincrement())
  nombre         String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("procesoconsumible")
}

model DescripcionConsumible {
  id             Int              @id @default(autoincrement())
  descripcion    String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("descripcionconsumible")
}

model TipoConsumible {
  id            Int      @id @default(autoincrement())
  nombre        String
  unidad        String
  descripcionId Int
  categoriaId   Int
  grupoId       Int
  procesoId     Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  descripcion              DescripcionConsumible?     @relation(fields: [descripcionId], references: [id])
  categoria                CategoriaConsumible        @relation(fields: [categoriaId], references: [id])
  grupo                    GrupoConsumible            @relation(fields: [grupoId], references: [id])
  proceso                  ProcesoConsumible          @relation(fields: [procesoId], references: [id])
  FactorTipoConsumible     FactorTipoConsumible[]
  Consumible               Consumible[]
  ConsumibleCalculos       ConsumibleCalculos[]
  ConsumibleCalculosDetail ConsumibleCalculosDetail[]

  @@map("tipoconsumible")
}

model FactorTipoConsumible {
  id               Int      @id @default(autoincrement())
  factor           Float
  tipoConsumibleId Int
  anioId           Int
  fuente           String?
  link             String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  tipoConsumible           TipoConsumible?            @relation(fields: [tipoConsumibleId], references: [id])
  anio                     Anio?                      @relation(fields: [anioId], references: [id])
  ConsumibleCalculosDetail ConsumibleCalculosDetail[]

  @@unique([tipoConsumibleId, anioId])
  @@map("factortipoconsumible")
}

model Consumible {
  id               Int      @id @default(autoincrement())
  tipoConsumibleId Int
  sedeId           Int
  anioId           Int
  mesId            Int
  anio_mes         Int
  pesoTotal        Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  tipoConsumible TipoConsumible? @relation(fields: [tipoConsumibleId], references: [id])
  sede           Sede?           @relation(fields: [sedeId], references: [id])
  mes            Mes?            @relation(fields: [mesId], references: [id])
  anio           Anio?           @relation(fields: [anioId], references: [id])
  File           File[]

  @@map("consumible")
}

model ConsumibleCalculos {
  id               Int      @id @default(autoincrement())
  tipoConsumibleId Int
  periodoCalculoId Int
  sedeId           Int
  pesoTotal        Float
  totalGEI         Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  tipoConsumible           TipoConsumible?            @relation(fields: [tipoConsumibleId], references: [id])
  sede                     Sede?                      @relation(fields: [sedeId], references: [id])
  PeriodoCalculo           PeriodoCalculo?            @relation(fields: [periodoCalculoId], references: [id])
  ConsumibleCalculosDetail ConsumibleCalculosDetail[]

  @@map("consumiblecalculos")
}

model ConsumibleCalculosDetail {
  id                     Int      @id @default(autoincrement())
  tipoConsumibleId       Int
  factorTipoConsumibleId Int
  anioId                 Int
  sedeId                 Int
  pesoTotal              Float
  totalGEI               Float
  consumibleCalculosId   Int
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt

  tipoConsumible       TipoConsumible?       @relation(fields: [tipoConsumibleId], references: [id])
  factorTipoConsumible FactorTipoConsumible? @relation(fields: [factorTipoConsumibleId], references: [id])
  anio                 Anio?                 @relation(fields: [anioId], references: [id])
  sede                 Sede?                 @relation(fields: [sedeId], references: [id])
  consumibleCalculos   ConsumibleCalculos?   @relation(fields: [consumibleCalculosId], references: [id])

  @@map("consumiblecalculosdetail")
}

// TRANSPORTE AEREO
model FactorEmisionTransporteAereo {
  id              Int     @id @default(autoincrement())
  factor1600      Float
  factor1600_3700 Float
  factor3700      Float
  anio_id         Int
  fuente          String?
  link            String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  TransporteAereoCalculosDetail TransporteAereoCalculosDetail[]

  anio Anio @relation(fields: [anio_id], references: [id])

  @@map("factoremisiontransporteaereo")
}

model TransporteAereo {
  id              Int       @id @default(autoincrement())
  numeroPasajeros Int?
  origen          String?
  destino         String?
  isIdaVuelta     Boolean
  fechaSalida     DateTime?
  fechaRegreso    DateTime?
  distanciaTramo  Float?
  kmRecorrido     Float

  sede_id  Int
  mes_id   Int
  anio_id  Int
  anio_mes Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?   @relation(fields: [mes_id], references: [id])
  anio Anio?  @relation(fields: [anio_id], references: [id])
  sede Sede?  @relation(fields: [sede_id], references: [id])
  File File[]

  @@map("transporteaereo")
}

model TransporteAereoCalculos {
  id               Int    @id @default(autoincrement())
  intervalo        String // 1600, 1600-3700, >3700
  consumo          Float
  totalGEI         Float
  sedeId           Int
  periodoCalculoId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede                          Sede?                           @relation(fields: [sedeId], references: [id])
  PeriodoCalculo                PeriodoCalculo?                 @relation(fields: [periodoCalculoId], references: [id])
  TransporteAereoCalculosDetail TransporteAereoCalculosDetail[]

  @@map("transporteaereocalculos")
}

model TransporteAereoCalculosDetail {
  id                        Int    @id @default(autoincrement())
  intervalo                 String // <1600, 1600-3700, >3700
  consumo                   Float
  factorEmisionAereoId      Int
  totalGEI                  Float
  sedeId                    Int
  transporteAereoCalculosId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  factorEmisionTransporteAereo FactorEmisionTransporteAereo? @relation(fields: [factorEmisionAereoId], references: [id])
  sede                         Sede?                         @relation(fields: [sedeId], references: [id])
  transporteAereoCalculos      TransporteAereoCalculos       @relation(fields: [transporteAereoCalculosId], references: [id])

  @@map("transporteaereocalculosdetail")
}

// TRANSPORTE TERRESTRE
model FactorEmisionTransporteTerrestre {
  id      Int     @id @default(autoincrement())
  factor  Float
  anio_id Int
  fuente  String?
  link    String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  TransporteTerrestreCalculosDetail TransporteTerrestreCalculosDetail[]

  anio Anio @relation(fields: [anio_id], references: [id])

  @@map("factoremisiontransporteterrestre")
}

model TransporteTerrestre {
  id                Int       @id @default(autoincrement())
  numeroPasajeros   Int?
  origen            String?
  destino           String?
  isIdaVuelta       Boolean
  fechaSalida       DateTime?
  fechaRegreso      DateTime?
  motivo            String?
  numeroComprobante String?
  distancia         Float
  sede_id           Int
  mes_id            Int
  anio_id           Int
  anio_mes          Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?   @relation(fields: [mes_id], references: [id])
  anio Anio?  @relation(fields: [anio_id], references: [id])
  sede Sede?  @relation(fields: [sede_id], references: [id])
  File File[]

  @@map("transporteterrestre")
}

model TransporteTerrestreCalculos {
  id               Int   @id @default(autoincrement())
  consumo          Float
  totalGEI         Float
  sedeId           Int
  periodoCalculoId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede                              Sede?                               @relation(fields: [sedeId], references: [id])
  PeriodoCalculo                    PeriodoCalculo?                     @relation(fields: [periodoCalculoId], references: [id])
  TransporteTerrestreCalculosDetail TransporteTerrestreCalculosDetail[]

  @@map("transporteterrestrecalculos")
}

model TransporteTerrestreCalculosDetail {
  id                            Int   @id @default(autoincrement())
  consumo                       Float
  factorEmisionTerrestreId      Int
  totalGEI                      Float
  sedeId                        Int
  transporteTerrestreCalculosId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  factorEmisionTransporteTerrestre FactorEmisionTransporteTerrestre? @relation(fields: [factorEmisionTerrestreId], references: [id])
  sede                             Sede?                             @relation(fields: [sedeId], references: [id])
  transporteTerrestreCalculos      TransporteTerrestreCalculos       @relation(fields: [transporteTerrestreCalculosId], references: [id])

  @@map("transporteterrestrecalculosdetail")
}

// TRANSPORTE CASA TRABAJO
model TipoVehiculo {
  id         Int      @id @default(autoincrement())
  nombre     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  FactorTransporteCasaTrabajo FactorTransporteCasaTrabajo[]
  CasaTrabajo                 CasaTrabajo[]
  CasaTrabajoCalculos         CasaTrabajoCalculos[]
  CasaTrabajoCalculosDetail   CasaTrabajoCalculosDetail[]

  @@map("tipovehiculo")
}

model FactorTransporteCasaTrabajo {
  id             Int      @id @default(autoincrement())
  factorCO2      Float?
  factorCH4      Float?
  factorN2O      Float?
  factor         Float
  tipoVehiculoId Int
  anioId         Int
  fuente         String?
  link           String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  tipoVehiculo TipoVehiculo? @relation(fields: [tipoVehiculoId], references: [id])
  anio         Anio?         @relation(fields: [anioId], references: [id])

  CasaTrabajoCalculosDetail CasaTrabajoCalculosDetail[]

  @@map("factortransportecasatrabajo")
}

model CasaTrabajo {
  id             Int      @id @default(autoincrement())
  tipo           String // ALUMNO, DOCENTE, ADMINISTRATIVO
  tipoVehiculoId Int
  kmRecorrido    Float
  sedeId         Int
  anioId         Int
  mesId          Int
  anio_mes       Int
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  tipoVehiculo TipoVehiculo? @relation(fields: [tipoVehiculoId], references: [id])
  sede         Sede?         @relation(fields: [sedeId], references: [id])
  anio         Anio?         @relation(fields: [anioId], references: [id])
  mes          Mes?          @relation(fields: [mesId], references: [id])
  File         File[]

  @@map("casatrabajo")
}

model CasaTrabajoCalculos {
  id               Int      @id @default(autoincrement())
  tipoVehiculoId   Int
  periodoCalculoId Int
  sedeId           Int
  kmRecorrido      Float
  totalGEI         Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  tipoVehiculo              TipoVehiculo?               @relation(fields: [tipoVehiculoId], references: [id])
  sede                      Sede?                       @relation(fields: [sedeId], references: [id])
  PeriodoCalculo            PeriodoCalculo?             @relation(fields: [periodoCalculoId], references: [id])
  CasaTrabajoCalculosDetail CasaTrabajoCalculosDetail[]

  @@map("casatrabajocalculos")
}

model CasaTrabajoCalculosDetail {
  id                    Int      @id @default(autoincrement())
  tipoVehiculoId        Int
  factorCasaTrabajoId   Int
  casaTrabajoCalculosId Int
  anioId                Int
  sedeId                Int
  kmRecorrido           Float
  totalGEI              Float
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  casaTrabajoCalculos CasaTrabajoCalculos          @relation(fields: [casaTrabajoCalculosId], references: [id])
  tipoVehiculo        TipoVehiculo?                @relation(fields: [tipoVehiculoId], references: [id])
  factorCasaTrabajo   FactorTransporteCasaTrabajo? @relation(fields: [factorCasaTrabajoId], references: [id])
  anio                Anio?                        @relation(fields: [anioId], references: [id])
  sede                Sede?                        @relation(fields: [sedeId], references: [id])

  @@map("casatrabajocalculosdetail")
}

model GrupoActivo {
  id         Int      @id @default(autoincrement())
  nombre     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  CategoriaActivo      CategoriaActivo[]
  FactorTipoActivo     FactorTipoActivo[]
  ActivoCalculos       ActivoCalculos[]
  ActivoCalculosDetail ActivoCalculosDetail[]

  @@map("grupoactivo")
}

model CategoriaActivo {
  id            Int      @id @default(autoincrement())
  nombre        String
  grupoActivoId Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  grupoActivo GrupoActivo? @relation(fields: [grupoActivoId], references: [id])

  TipoActivo TipoActivo[]

  @@map("categoriaactivo")
}

model TipoActivo {
  id            Int      @id @default(autoincrement())
  nombre        String
  unidad        String
  peso          Float
  fuente        String?
  costoUnitario Float?
  categoriaId   Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  categoria CategoriaActivo? @relation(fields: [categoriaId], references: [id])
  Activo    Activo[]

  @@map("tipoactivo")
}

model FactorTipoActivo {
  id            Int      @id @default(autoincrement())
  factor        Float
  grupoActivoId Int
  anioId        Int
  fuente        String?
  link          String?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  anio                 Anio?                  @relation(fields: [anioId], references: [id])
  grupoActivo          GrupoActivo?           @relation(fields: [grupoActivoId], references: [id])
  ActivoCalculosDetail ActivoCalculosDetail[]

  @@unique([grupoActivoId, anioId])
  @@map("factortipoactivo")
}

model Activo {
  id                Int      @id @default(autoincrement())
  tipoActivoId      Int
  sedeId            Int
  anioId            Int
  mesId             Int
  anio_mes          Int
  cantidadComprada  Float
  cantidadConsumida Float
  costoTotal        Float?
  consumoTotal      Float
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  tipoActivo TipoActivo? @relation(fields: [tipoActivoId], references: [id])
  sede       Sede?       @relation(fields: [sedeId], references: [id])
  mes        Mes?        @relation(fields: [mesId], references: [id])
  anio       Anio?       @relation(fields: [anioId], references: [id])
  File       File[]

  @@map("activo")
}

model ActivoCalculos {
  id               Int      @id @default(autoincrement())
  grupoActivoId    Int
  periodoCalculoId Int
  sedeId           Int
  cantidadTotal    Float
  totalGEI         Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  grupoActivo          GrupoActivo?           @relation(fields: [grupoActivoId], references: [id])
  sede                 Sede?                  @relation(fields: [sedeId], references: [id])
  PeriodoCalculo       PeriodoCalculo?        @relation(fields: [periodoCalculoId], references: [id])
  ActivoCalculosDetail ActivoCalculosDetail[]

  @@map("activocalculos")
}

model ActivoCalculosDetail {
  id                 Int      @id @default(autoincrement())
  grupoActivoId      Int
  factorTipoActivoId Int
  anioId             Int
  sedeId             Int
  activoCalculosId   Int
  cantidadTotal      Float
  totalGEI           Float
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  grupoActivo      GrupoActivo?      @relation(fields: [grupoActivoId], references: [id])
  factorTipoActivo FactorTipoActivo? @relation(fields: [factorTipoActivoId], references: [id])
  anio             Anio?             @relation(fields: [anioId], references: [id])
  sede             Sede?             @relation(fields: [sedeId], references: [id])
  activoCalculos   ActivoCalculos?   @relation(fields: [activoCalculosId], references: [id])

  @@map("activocalculosdetail")
}

// EXTINTOR
model TipoExtintor {
  id         Int      @id @default(autoincrement())
  nombre     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  FactorEmisionExtintor  FactorEmisionExtintor[]
  Extintor               Extintor[]
  ExtintorCalculos       ExtintorCalculos[]
  ExtintorCalculosDetail ExtintorCalculosDetail[]

  @@map("tipoextintor")
}

model FactorEmisionExtintor {
  id             Int     @id @default(autoincrement())
  factor         Float
  tipoExtintorId Int
  anio_id        Int
  fuente         String?
  link           String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  ExtintorCalculosDetail ExtintorCalculosDetail[]

  anio Anio?         @relation(fields: [anio_id], references: [id])
  tipo TipoExtintor? @relation(fields: [tipoExtintorId], references: [id])

  @@map("factoremisionextintor")
}

model Extintor {
  id             Int   @id @default(autoincrement())
  tipoExtintorId Int
  consumo        Float
  sede_id        Int
  anio_id        Int
  mes_id         Int
  anio_mes       Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede         Sede?         @relation(fields: [sede_id], references: [id])
  anio         Anio?         @relation(fields: [anio_id], references: [id])
  mes          Mes?          @relation(fields: [mes_id], references: [id])
  tipoExtintor TipoExtintor? @relation(fields: [tipoExtintorId], references: [id])
  File         File[]

  @@map("extintor")
}

model ExtintorCalculos {
  id               Int   @id @default(autoincrement())
  tipoExtintorId   Int
  consumoTotal     Float
  totalGEI         Float
  sedeId           Int?
  periodoCalculoId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede                   Sede?                    @relation(fields: [sedeId], references: [id])
  PeriodoCalculo         PeriodoCalculo?          @relation(fields: [periodoCalculoId], references: [id])
  tipoExtintor           TipoExtintor?            @relation(fields: [tipoExtintorId], references: [id])
  ExtintorCalculosDetail ExtintorCalculosDetail[]

  @@map("extintorcalculos")
}

model ExtintorCalculosDetail {
  id                      Int   @id @default(autoincrement())
  consumoTotal            Float
  totalGEI                Float
  sedeId                  Int?
  factorEmisionExtintorId Int
  tipoExtintorId          Int
  extintorCalculosId      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede                  Sede?                  @relation(fields: [sedeId], references: [id])
  factorEmisionExtintor FactorEmisionExtintor? @relation(fields: [factorEmisionExtintorId], references: [id])
  extintorCalculos      ExtintorCalculos?      @relation(fields: [extintorCalculosId], references: [id])
  tipoExtintor          TipoExtintor?          @relation(fields: [tipoExtintorId], references: [id])

  @@map("extintorcalculosdetail")
}

model File {
  id           Int     @id @default(autoincrement())
  name         String
  downloadLink String
  streamLink   String
  fileId       String
  type         String?

  combustibleId           Int?
  extintorId              Int?
  fertilizanteId          Int?
  consumoEnergiaId        Int?
  transporteAereoId       Int?
  transporteTerrestreId   Int?
  taxiId                  Int?
  transporteCasaTrabajoId Int?
  consumoPapelId          Int?
  consumoAguaId           Int?
  activoId                Int?
  consumibleId            Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  combustible           Combustible?         @relation(fields: [combustibleId], references: [id])
  extintor              Extintor?            @relation(fields: [extintorId], references: [id])
  fertilizante          Fertilizante?        @relation(fields: [fertilizanteId], references: [id])
  consumoEnergia        consumoEnergia?      @relation(fields: [consumoEnergiaId], references: [id])
  transporteAereo       TransporteAereo?     @relation(fields: [transporteAereoId], references: [id])
  transporteTerrestre   TransporteTerrestre? @relation(fields: [transporteTerrestreId], references: [id])
  taxi                  Taxi?                @relation(fields: [taxiId], references: [id])
  transporteCasaTrabajo CasaTrabajo?         @relation(fields: [transporteCasaTrabajoId], references: [id])
  consumoPapel          ConsumoPapel?        @relation(fields: [consumoPapelId], references: [id])
  consumoAgua           ConsumoAgua?         @relation(fields: [consumoAguaId], references: [id])
  activo                Activo?              @relation(fields: [activoId], references: [id])
  consumible            Consumible?          @relation(fields: [consumibleId], references: [id])

  @@unique([type])
}
